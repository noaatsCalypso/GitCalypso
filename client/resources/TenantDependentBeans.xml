<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  	http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-2.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

	<!-- 
	This configuration controls the beans specific to a single vs. multi-tenant 
	system. 
	
	WARNING: Do not modify this file in production.
	
	The following are definitions for the beans which enforce multi-tenant vs. single tenanty system:
	
	1. userServicable 
	   After authorization is complete, this RMI interceptor ensures the current 
	   request contains a tenant id matching the current tenant context for this service.
	   IE is the DS running as tenant 1 processing requests for tenant 1 only.
	   
	2. namingQualifier
	   This bean ensures that the RMI services registered are bound using the tenant
	   id as an additional qualifier.
	   
	3. eventQualifier
	   This beans ensures each event generated by any node is tagged with the appropriate 
	   tenant id.
	   
	4. dbSessionHandler
	   Before returning a connection to the user, this bean sets the correct tenant id
	   on the connection session to allow the VPD policy to execute correctly for the current
	   tenant.
	   
	-->
	
	<!-- Stand Alone Beans -->
	<bean id="userServiceable"
		class="com.calypso.infra.authentication.client.StandAloneUserServiceableManager"/>
	<bean id="namingQualifier" class="com.calypso.infra.rmi.StandAloneNamingQualifier"/>
	<bean id="eventQualifier"
		class="com.calypso.infra.eventpublisher.StandAloneEventQualifier"/>
	<bean id="globalConfig" class="com.calypso.infra.util.Configuration">
		<property name="systemConfig">
			<props>
				<prop key="alwaysCreateRegistry">true</prop>
			</props>
		</property>
	</bean>
	<bean id="databaseSessionHandler" class="com.calypso.tk.core.sql.StandAloneDBSessionHandler"/>
 	
	<!-- End Stand Alone Beans -->

	<!-- Tenant Based Beans -->
	<!-- WARNING! DO NOT UNCOMMENT
	<bean id="userServiceable"
		class="com.calypso.infra.authentication.client.TeanantBasedUserServiceableManager">
		<property name="tenantHelper">
			<bean class="com.calypso.infra.authentication.userdetails.TenantHelper" />
		</property>
	</bean>

	<bean id="namingQualifier" class="com.calypso.infra.rmi.TenantBasedNamingQualifier"
		depends-on="loginHandler">
		<property name="tenantId">
			<bean class="com.calypso.security.auth.TenantFactory" />
		</property>
	</bean>

	<bean id="eventQualifier"
		class="com.calypso.infra.eventpublisher.TenantBasedEventQualifier"/>
	
	<bean id="globalConfig" class="com.calypso.infra.util.Configuration">
		<property name="systemConfig">
			<props>
				<prop key="alwaysCreateRegistry">false</prop>
			</props>
		</property>
	</bean>
	<bean id="databaseSessionHandler" class="com.calypso.tk.core.sql.TenantDBSessionHandler"/>
 	-->
	
	<!-- End Tenant Based Beans -->

</beans>	
