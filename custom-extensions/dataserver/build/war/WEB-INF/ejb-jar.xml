<?xml version="1.0" encoding="UTF-8"?>
<ejb-jar version="3.1" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/ejb-jar_3_1.xsd">
	<display-name>Calypso Data Server</display-name>

	<enterprise-beans>
		<session>
			<ejb-name>EnvironmentInitializer</ejb-name>
			<ejb-class>com.calypso.tk.core.EnvironmentInitializer</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<env-entry>
				<env-entry-name>com.calypso.tk.core.EnvironmentInitializer/applicationName</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>DataServer</env-entry-value>
				<injection-target>
				    <injection-target-class>com.calypso.tk.core.EnvironmentInitializer</injection-target-class>
				    <injection-target-name>applicationName</injection-target-name>
				</injection-target>
			</env-entry>
			<env-entry>
				<env-entry-name>com.calypso.tk.core.EnvironmentInitializer/effectiveUserEnabled</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
				<injection-target>
				    <injection-target-class>com.calypso.tk.core.EnvironmentInitializer</injection-target-class>
				    <injection-target-name>EffectiveUserEnabled</injection-target-name>
				</injection-target>
			</env-entry>
			<!-- Sample Log Directory Override
			<env-entry>
				<env-entry-name>com.calypso.tk.core.EnvironmentInitializer/logDir</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>/path/to/logdir</env-entry-value>
				<injection-target>
				    <injection-target-class>com.calypso.tk.core.EnvironmentInitializer</injection-target-class>
				    <injection-target-name>logDir</injection-target-name>
				</injection-target>
			</env-entry>
			-->
			<resource-ref>
				<res-ref-name>ModuleName</res-ref-name>
				<res-type>java.lang.String</res-type>
				<injection-target>
					<injection-target-class>com.calypso.tk.core.EnvironmentInitializer</injection-target-class>
					<injection-target-name>moduleName</injection-target-name>
				</injection-target>
				<lookup-name>java:module/ModuleName</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-class>com.calypso.tk.core.EnvironmentInitializer</lifecycle-callback-class>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		<session>
			<ejb-name>CacheConfigurationBean</ejb-name>
			<ejb-class>com.calypso.tk.core.CacheConfigurationBean</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<concurrency-management-type>Bean</concurrency-management-type>
			<depends-on><ejb-name>EnvironmentInitializer</ejb-name></depends-on>
			<resource-ref>
				<res-ref-name>CalypsoDataSource</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.core.CacheConfigurationBean</injection-target-class>
					<injection-target-name>dataSource</injection-target-name>
				</injection-target>
				<lookup-name>jdbc/calypso</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>ModuleName</res-ref-name>
				<res-type>java.lang.String</res-type>
				<injection-target>
					<injection-target-class>com.calypso.tk.core.CacheConfigurationBean</injection-target-class>
					<injection-target-name>moduleName</injection-target-name>
				</injection-target>
				<lookup-name>java:module/ModuleName</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-class>com.calypso.tk.core.CacheConfigurationBean</lifecycle-callback-class>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		<session>
			<ejb-name>MessagingInitializer</ejb-name>
			<ejb-class>com.calypso.tk.event.MessagingInitializer</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<depends-on><ejb-name>EnvironmentInitializer</ejb-name></depends-on>
			<resource-ref>
				<res-ref-name>jmsConnectionFactory</res-ref-name>
				<res-type>javax.jms.ConnectionFactory</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.event.MessagingInitializer</injection-target-class>
					<injection-target-name>connectionFactory</injection-target-name>
				</injection-target>
				<lookup-name>jms/connectionFactory</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-class>com.calypso.tk.event.MessagingInitializer</lifecycle-callback-class>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		<session>
			<ejb-name>ElasticsearchMessagingServerInitializer</ejb-name>
			<ejb-class>com.calypso.elasticsearch.monitoring.ElasticsearchMessagingServerInitializer</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<depends-on><ejb-name>MessagingInitializer</ejb-name></depends-on>
			<resource-ref>
				<res-ref-name>todPooledConnectionFactory</res-ref-name>
				<res-type>javax.jms.ConnectionFactory</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.elasticsearch.monitoring.ElasticsearchMessagingServerInitializer</injection-target-class>
					<injection-target-name>connectionFactory</injection-target-name>
				</injection-target>
				<lookup-name>jms/todPooledConnectionFactory</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>jmsQueue</res-ref-name>
				<res-type>javax.jms.Queue</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.elasticsearch.monitoring.ElasticsearchMessagingServerInitializer</injection-target-class>
					<injection-target-name>queue</injection-target-name>
				</injection-target>
				<lookup-name>queue/calypsoMonitoring</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-class>com.calypso.elasticsearch.monitoring.ElasticsearchMessagingServerInitializer</lifecycle-callback-class>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
			<pre-destroy>
				<lifecycle-callback-class>com.calypso.elasticsearch.monitoring.ElasticsearchMessagingServerInitializer</lifecycle-callback-class>
				<lifecycle-callback-method>destroy</lifecycle-callback-method>
			</pre-destroy>
		</session>
		<session>
			<ejb-name>SQLInitializer</ejb-name>
			<ejb-class>com.calypso.tk.core.sql.SQLInitializer</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<depends-on>
			<ejb-name>MessagingInitializer</ejb-name>
			</depends-on>
			<resource-ref>
				<res-ref-name>CalypsoDataSource</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.core.sql.SQLInitializer</injection-target-class>
					<injection-target-name>dataSource</injection-target-name>
				</injection-target>
				<lookup-name>jdbc/calypso</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>TransactionSynchronizationRegistry</res-ref-name>
				<res-type>javax.transaction.TransactionSynchronizationRegistry</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.core.sql.SQLInitializer</injection-target-class>
					<injection-target-name>transactionSynchronizationRegistry</injection-target-name>
				</injection-target>
				<lookup-name>java:comp/TransactionSynchronizationRegistry</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-class>com.calypso.tk.core.sql.SQLInitializer</lifecycle-callback-class>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		<session>
			<ejb-name>ServiceMethodArgsValidator</ejb-name>
			<ejb-class>com.calypso.infra.validation.ServiceMethodArgsValidator</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<depends-on>
			<ejb-name>SQLInitializer</ejb-name>
			</depends-on>
			<resource-ref>
				<res-ref-name>CalypsoDataSource</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.infra.validation.ServiceMethodArgsValidator</injection-target-class>
					<injection-target-name>dataSource</injection-target-name>
				</injection-target>
				<lookup-name>jdbc/calypso</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		<session>
			<ejb-name>DataServerSQL</ejb-name>
			<ejb-class>com.calypso.tk.core.sql.DataServerSQL</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<concurrency-management-type>Bean</concurrency-management-type>
			<depends-on>
			<ejb-name>ServiceMethodArgsValidator</ejb-name>
			</depends-on>
			<resource-ref>
				<res-ref-name>CalypsoDataSource</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.core.sql.DataServerSQL</injection-target-class>
					<injection-target-name>dataSource</injection-target-name>
				</injection-target>
				<lookup-name>jdbc/calypso</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
			<pre-destroy><lifecycle-callback-method>stop</lifecycle-callback-method></pre-destroy>
		</session>
        <session>
			<ejb-name>DataServerInitializer</ejb-name>
			<ejb-class>com.calypso.tk.service.InitializeDataServer</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<depends-on>
			<ejb-name>SeedAllocator</ejb-name>
			<ejb-name>EnvironmentInitializer</ejb-name>
			</depends-on>
			<resource-ref>
				<res-ref-name>DataserverModuleName</res-ref-name>
				<res-type>java.lang.String</res-type>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.InitializeDataServer</injection-target-class>
					<injection-target-name>moduleName</injection-target-name>
				</injection-target>
				<lookup-name>java:module/ModuleName</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>jmsConnectionFactory</res-ref-name>
				<res-type>javax.jms.ConnectionFactory</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.InitializeDataServer</injection-target-class>
					<injection-target-name>jmsConnectionFactory</injection-target-name>
				</injection-target>
				<lookup-name>jms/connectionFactory</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>topicCalypso</res-ref-name>
				<res-type>javax.jms.Topic</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.InitializeDataServer</injection-target-class>
					<injection-target-name>topic</injection-target-name>
				</injection-target>
				<lookup-name>topic/calypso</lookup-name>
			</resource-ref>
		</session>
		<session>
			<ejb-name>com.calypso.infra.admin.sql.UserSessionSQL</ejb-name>
			<ejb-class>com.calypso.infra.admin.sql.UserSessionSQL</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<concurrency-management-type>Bean</concurrency-management-type>
			<depends-on>
				<ejb-name>SQLInitializer</ejb-name>
			</depends-on>
			<env-entry>
				<env-entry-name>com.calypso.infra.admin.sql.UserSessionSQL/disableSessionHandlerLookup</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>true</env-entry-value>
				<injection-target>
					<injection-target-class>com.calypso.infra.admin.sql.UserSessionSQL</injection-target-class>
					<injection-target-name>disableSessionHandlerLookup</injection-target-name>
				</injection-target>
			</env-entry>
			<resource-ref>
				<res-ref-name>CalypsoDataSource</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.infra.admin.sql.UserSessionSQL</injection-target-class>
					<injection-target-name>dataSource</injection-target-name>
				</injection-target>
				<lookup-name>jdbc/calypso</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>moduleName</res-ref-name>
				<res-type>java.lang.String</res-type>
				<injection-target>
					<injection-target-class>com.calypso.infra.admin.sql.UserSessionSQL</injection-target-class>
					<injection-target-name>moduleName</injection-target-name>
				</injection-target>
				<lookup-name>java:module/ModuleName</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>TransactionSynchronizationRegistry</res-ref-name>
				<res-type>javax.transaction.TransactionSynchronizationRegistry</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.infra.admin.sql.UserSessionSQL</injection-target-class>
					<injection-target-name>transactionSynchronizationRegistry</injection-target-name>
				</injection-target>
				<lookup-name>java:comp/TransactionSynchronizationRegistry</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>		
		<session>
			<ejb-name>com.calypso.infra.admin.RemoteUserSession</ejb-name>
			<ejb-class>com.calypso.infra.admin.UserSessionBean</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<depends-on>
				<ejb-name>DataServerInitializer</ejb-name>
			</depends-on>
			<env-entry>
				<env-entry-name>com.calypso.infra.admin.RemoteUserSession/sessionRenewExclusionAppNames</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>Calculator</env-entry-value>
				<injection-target>
				    <injection-target-class>com.calypso.infra.admin.UserSessionBean</injection-target-class>
				    <injection-target-name>sessionRenewExclusionAppNames</injection-target-name>
				</injection-target>
			</env-entry>
			<resource-ref>
				<res-ref-name>jmsConnectionFactory</res-ref-name>
				<res-type>javax.jms.ConnectionFactory</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.infra.admin.UserSessionBean</injection-target-class>
					<injection-target-name>jmsConnectionFactory</injection-target-name>
				</injection-target>
				<lookup-name>jms/connectionFactory</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>topicCalypsoAdmin</res-ref-name>
				<res-type>javax.jms.Topic</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.infra.admin.UserSessionBean</injection-target-class>
					<injection-target-name>topicAdmin</injection-target-name>
				</injection-target>
				<lookup-name>topic/calypsoAdmin</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>moduleName</res-ref-name>
				<res-type>java.lang.String</res-type>
				<injection-target>
					<injection-target-class>com.calypso.infra.admin.UserSessionBean</injection-target-class>
					<injection-target-name>moduleName</injection-target-name>
				</injection-target>
				<lookup-name>java:module/ModuleName</lookup-name>
			</resource-ref>
		</session>
		<session>
		    <ejb-name>com.calypso.tk.service.RemoteEngineManagerService</ejb-name>
			<ejb-class>com.calypso.tk.service.EngineManagerServiceBean</ejb-class>
			<session-type>Stateless</session-type>
			<init-on-startup>true</init-on-startup>
			<depends-on>
				<ejb-name>DataServerInitializer</ejb-name>
			</depends-on>
		    <resource-ref>
				<res-ref-name>jmsConnectionFactory</res-ref-name>
				<res-type>javax.jms.ConnectionFactory</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.EngineManagerServiceBean</injection-target-class>
					<injection-target-name>jmsConnectionFactory</injection-target-name>
				</injection-target>
				<lookup-name>jms/connectionFactory</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>topicCalypsoAdmin</res-ref-name>
				<res-type>javax.jms.Topic</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.EngineManagerServiceBean</injection-target-class>
					<injection-target-name>topicAdmin</injection-target-name>
				</injection-target>
				<lookup-name>topic/calypsoAdmin</lookup-name>
			</resource-ref>
		</session>
		<session>
			<ejb-name>com.calypso.tk.event.sql.EventLoader</ejb-name>
			<ejb-class>com.calypso.tk.event.sql.EventLoader</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<concurrency-management-type>Bean</concurrency-management-type>
			<depends-on>
			<ejb-name>SQLInitializer</ejb-name>
			</depends-on>
			<resource-ref>
				<res-ref-name>CalypsoDataSource</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.event.sql.EventLoader</injection-target-class>
					<injection-target-name>dataSource</injection-target-name>
				</injection-target>
				<lookup-name>jdbc/calypso</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>moduleName</res-ref-name>
				<res-type>java.lang.String</res-type>
				<injection-target>
					<injection-target-class>com.calypso.tk.event.sql.EventLoader</injection-target-class>
					<injection-target-name>moduleName</injection-target-name>
				</injection-target>
				<lookup-name>java:module/ModuleName</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>TransactionSynchronizationRegistry</res-ref-name>
				<res-type>javax.transaction.TransactionSynchronizationRegistry</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.event.sql.EventLoader</injection-target-class>
					<injection-target-name>transactionSynchronizationRegistry</injection-target-name>
				</injection-target>
				<lookup-name>java:comp/TransactionSynchronizationRegistry</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>	
		<session>
			<ejb-name>com.calypso.tk.event.publisher.EventPublishingThreadPoolBean</ejb-name>
			<ejb-class>com.calypso.tk.event.publisher.EventPublishingThreadPoolBean</ejb-class>
			<session-type>Singleton</session-type>
			<concurrency-management-type>Bean</concurrency-management-type>
			<post-construct>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
			<pre-destroy>
				<lifecycle-callback-method>stop</lifecycle-callback-method>
			</pre-destroy>
		</session>
		<session>
			<ejb-name>com.calypso.tk.event.publisher.EventPublishingStatisticsBean</ejb-name>
			<ejb-class>com.calypso.tk.event.publisher.EventPublishingStatisticsBean</ejb-class>
			<session-type>Singleton</session-type>
			<concurrency-management-type>Bean</concurrency-management-type>
			<post-construct>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		<session>
			<ejb-name>com.calypso.tk.event.publisher.EventPublisherBean</ejb-name>
			<ejb-class>com.calypso.tk.event.publisher.EventPublisherBean</ejb-class>
			<session-type>Singleton</session-type>
			<concurrency-management-type>Bean</concurrency-management-type>
			<transaction-type>Bean</transaction-type> 
			<ejb-local-ref>
				<ejb-ref-name>com.calypso.tk.event.publisher.EventPublishingThreadPoolBean</ejb-ref-name>
				<ejb-ref-type>Session</ejb-ref-type>
				<local>com.calypso.tk.event.publisher.EventPublishingThreadPoolBean</local>
				<ejb-link>com.calypso.tk.event.publisher.EventPublishingThreadPoolBean</ejb-link>
				<injection-target>
					<injection-target-class>com.calypso.tk.event.publisher.EventPublisherBean</injection-target-class>
					<injection-target-name>publisherThreads</injection-target-name>
				</injection-target>
			</ejb-local-ref>
			<ejb-local-ref>
				<ejb-ref-name>com.calypso.tk.event.publisher.EventPublishingStatisticsBean</ejb-ref-name>
				<ejb-ref-type>Session</ejb-ref-type>
				<local>com.calypso.tk.event.publisher.EventPublishingStatisticsBean</local>
				<ejb-link>com.calypso.tk.event.publisher.EventPublishingStatisticsBean</ejb-link>
				<injection-target>
					<injection-target-class>com.calypso.tk.event.publisher.EventPublisherBean</injection-target-class>
					<injection-target-name>eventStats</injection-target-name>
				</injection-target>
			</ejb-local-ref>
			<resource-ref>
				<res-ref-name>jmsPooledConnectionFactory</res-ref-name>
				<res-type>javax.jms.ConnectionFactory</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.event.publisher.EventPublisherBean</injection-target-class>
					<injection-target-name>jmsConnectionFactory</injection-target-name>
				</injection-target>
				<lookup-name>jms/pooledConnectionFactory</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>topicCalypso</res-ref-name>
				<res-type>javax.jms.Topic</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.event.publisher.EventPublisherBean</injection-target-class>
					<injection-target-name>topic</injection-target-name>
				</injection-target>
				<lookup-name>topic/calypso</lookup-name>
			</resource-ref>
                        <post-construct>
                                <lifecycle-callback-class>com.calypso.tk.event.publisher.EventPublisherBean</lifecycle-callback-class>
                                <lifecycle-callback-method>init</lifecycle-callback-method>
                        </post-construct>
                        <pre-destroy>
                                <lifecycle-callback-class>com.calypso.tk.event.publisher.EventPublisherBean</lifecycle-callback-class>
                                <lifecycle-callback-method>destroy</lifecycle-callback-method>
                        </pre-destroy>
		</session>
		<session>
			<ejb-name>SeedAllocator</ejb-name>
			<business-local>com.calypso.tk.service.SeedAllocation</business-local>
			<ejb-class>com.calypso.tk.service.impl.SeedAllocationBean</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<concurrency-management-type>Bean</concurrency-management-type>
			<depends-on>
				<ejb-name>DataServerSQL</ejb-name>
			</depends-on>
			<transaction-type>Container</transaction-type>
			<post-construct>
				<lifecycle-callback-class>com.calypso.tk.service.impl.SeedAllocationBean</lifecycle-callback-class>
				<lifecycle-callback-method>initialize</lifecycle-callback-method>
			</post-construct>
		</session>
		<session>
			<ejb-name>com.calypso.tk.service.TransactionWrapper</ejb-name>
			<business-local>com.calypso.tk.service.TransactionWrapper</business-local>
			<ejb-class>com.calypso.tk.service.TransactionWrapperBean</ejb-class>
			<session-type>Singleton</session-type>
			<concurrency-management-type>Bean</concurrency-management-type>
			<transaction-type>Container</transaction-type>
			<resource-ref>
				<res-ref-name>CalypsoDataSource</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.TransactionWrapperBean</injection-target-class>
					<injection-target-name>dataSource</injection-target-name>
				</injection-target>
				<lookup-name>jdbc/calypso</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>TransactionSynchronizationRegistry</res-ref-name>
				<res-type>javax.transaction.TransactionSynchronizationRegistry</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.TransactionWrapperBean</injection-target-class>
					<injection-target-name>transactionSynchronizationRegistry</injection-target-name>
				</injection-target>
				<lookup-name>java:comp/TransactionSynchronizationRegistry</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		
		<!-- Memory timer -->
		<session>
			<ejb-name>CalypsoMemoryAlertTimer</ejb-name>
			<ejb-class>com.calypso.infra.monitoring.CalypsoMemoryAlertTimer</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<concurrency-management-type>Bean</concurrency-management-type>
			<depends-on>
				<ejb-name>EnvironmentInitializer</ejb-name>
			</depends-on>
			<transaction-type>Container</transaction-type>
			<post-construct>
				<lifecycle-callback-class>com.calypso.infra.monitoring.CalypsoMemoryAlertTimer</lifecycle-callback-class>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		
		<!-- Engine DB Queue Monitoring Timer -->
		<session>
			<ejb-name>CalypsoDbEngineQueueAlertTimer</ejb-name>
			<ejb-class>com.calypso.infra.monitoring.CalypsoDbEngineQueueAlertTimer</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<concurrency-management-type>Bean</concurrency-management-type>
			<depends-on>
				<ejb-name>SQLInitializer</ejb-name>
			</depends-on>
			<transaction-type>Container</transaction-type>
			<post-construct>
				<lifecycle-callback-class>com.calypso.infra.monitoring.CalypsoDbEngineQueueAlertTimer</lifecycle-callback-class>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>

		<!-- Task Engine Monitoring Timer -->
		<session>
			<ejb-name>CalypsoTaskEngineAlertTimer</ejb-name>
			<ejb-class>com.calypso.infra.monitoring.CalypsoTaskEngineAlertTimer</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<concurrency-management-type>Bean</concurrency-management-type>
			<depends-on>
				<ejb-name>EnvironmentInitializer</ejb-name>
			</depends-on>
			<transaction-type>Container</transaction-type>
			<post-construct>
				<lifecycle-callback-class>com.calypso.infra.monitoring.CalypsoTaskEngineAlertTimer</lifecycle-callback-class>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		
		<!-- Checks for database types of alerts, like seed, exceptions and so on -->
		<session>
			<ejb-name>CalypsoDBAlertsTimer</ejb-name>
			<ejb-class>com.calypso.infra.monitoring.CalypsoDBAlertsTimer</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<concurrency-management-type>Bean</concurrency-management-type>
			<depends-on>
				<ejb-name>SQLInitializer</ejb-name>
			</depends-on>
			<transaction-type>Container</transaction-type>
			<post-construct>
				<lifecycle-callback-class>com.calypso.infra.monitoring.CalypsoDBAlertsTimer</lifecycle-callback-class>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		

		<!-- 
			This MDB synchronizes the caches based on events, selector switches it on or 
			off based on system variable
		-->
		<message-driven>
			<ejb-name>com.calypso.tk.util.cache.ReadOnlyCacheSynchronizationBean</ejb-name>
			<ejb-class>com.calypso.tk.util.cache.ReadOnlyCacheSynchronizationBean</ejb-class>
			<transaction-type>Container</transaction-type>
			<activation-config>
				<activation-config-property>
	            	<activation-config-property-name>destination</activation-config-property-name>
	            	<activation-config-property-value>topic/calypso</activation-config-property-value>
	        	</activation-config-property>
	        	<activation-config-property>
	            	<activation-config-property-name>destinationType</activation-config-property-name>
	            	<activation-config-property-value>javax.jms.Topic</activation-config-property-value>
	        	</activation-config-property>
				<activation-config-property>
					<activation-config-property-name>acknowledgeMode</activation-config-property-name>
					<activation-config-property-value>Auto-acknowledge</activation-config-property-value>
				</activation-config-property>
				<activation-config-property>
					<activation-config-property-name>messageSelector</activation-config-property-name>
					<!-- 
						define the subscriptions for the bean and use it to limit the subscriptions
						we use this to "enable" or "disable" the MDB PSEvent=${calypso.isReadOnly:false}
					-->
					<activation-config-property-value>
						PSEvent IS NOT NULL AND PSEvent=${calypso.isReadOnly:false}
						AND (
							EventType='PSEventAdmin' 
							OR EventType='PSEventDomainChange' 
							OR EventType='PSEventTrade' 
							OR EventType='PSEventRemovedTrades' 
							OR EventType='PSEventRemovedPostings' 
							OR EventType='PSEventTransfer' 
							OR EventType='PSEventRemovedTransfers' 
							OR EventType='PSEventMessage' 
							OR EventType='PSEventRemovedMessages' 
							OR EventType='PSEventAccounting' 
							OR EventType='PSEventTask' 
							OR EventType='PSEventRemovedTasks' 
							OR EventType='PSEventMarketDataChange' 
							OR EventType='PSEventMDataConfigChange' 
							OR EventType='PSEventCreditRating' 
							OR EventType='PSEventCre' 
							OR EventType='PSEventRemovedCres' 
							OR EventType='PSEventAggSettlePosition' 
							OR EventType='PSEventSettlePosition' 
							OR EventType='PSEventPosition' 
							OR EventType='PSEventAggPosition'
							OR EventType='PSEventPositionKeepingProcessedTrade' 
						) 
					</activation-config-property-value>
				</activation-config-property>
				<activation-config-property>
					<!-- force only one session to avoid concurrency issues -->
					<activation-config-property-name>maxSession</activation-config-property-name>
					<activation-config-property-value>1</activation-config-property-value>
				</activation-config-property>
			</activation-config>
		</message-driven>
		<message-driven>
			<ejb-name>com.calypso.tk.cache.CacheUpdateSubscriberBean</ejb-name>
			<ejb-class>com.calypso.tk.cache.CacheUpdateSubscriberBean</ejb-class>
			<transaction-type>Container</transaction-type>			
			<activation-config>
				<activation-config-property>
					<activation-config-property-name>messageSelector</activation-config-property-name>
					<activation-config-property-value>${calypso.isReadOnly:false} AND (instanceName IS NULL OR instanceName &lt;&gt; '${instanceName}')</activation-config-property-value>
				</activation-config-property>
				<activation-config-property>
	            	<activation-config-property-name>destination</activation-config-property-name>
	            	<activation-config-property-value>topic/cacheupdate</activation-config-property-value>
	        	</activation-config-property>
	        	<activation-config-property>
	            	<activation-config-property-name>destinationType</activation-config-property-name>
	            	<activation-config-property-value>javax.jms.Topic</activation-config-property-value>
	        	</activation-config-property>
				<activation-config-property>
					<activation-config-property-name>acknowledgeMode</activation-config-property-name>
					<activation-config-property-value>Auto-acknowledge</activation-config-property-value>
				</activation-config-property>				
				<activation-config-property>
					<activation-config-property-name>minSessions</activation-config-property-name>
					<activation-config-property-value>25</activation-config-property-value>
				</activation-config-property>
				<activation-config-property>
					<activation-config-property-name>maxSession</activation-config-property-name>
					<activation-config-property-value>25</activation-config-property-value>
				</activation-config-property>
				<activation-config-property>
					<activation-config-property-name>clientId</activation-config-property-name>
					<activation-config-property-value>${clientID}</activation-config-property-value>
				</activation-config-property>
				<activation-config-property>
					<activation-config-property-name>subscriptionName</activation-config-property-name>
					<activation-config-property-value>${subscriptionNAME}</activation-config-property-value>
				</activation-config-property>
				<activation-config-property>
					<activation-config-property-name>subscriptionDurability</activation-config-property-name>
					<activation-config-property-value>${CACHEUPDATE_SUBSCRIPTION:NonDurable}</activation-config-property-value>
				</activation-config-property>
			</activation-config>
		</message-driven>
	</enterprise-beans>

	<interceptors>
		<interceptor>
			<interceptor-class>com.calypso.tk.service.interceptor.ServiceInterceptor</interceptor-class> 
			<around-invoke>
				<method-name>intercept</method-name>
			</around-invoke> 
			<ejb-local-ref>
				<ejb-ref-name>com.calypso.tk.event.publisher.EventPublisherBean</ejb-ref-name>
				<ejb-ref-type>Session</ejb-ref-type>
				<local>com.calypso.tk.event.publisher.EventPublisherBean</local>
				<ejb-link>com.calypso.tk.event.publisher.EventPublisherBean</ejb-link>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.interceptor.ServiceInterceptor</injection-target-class>
					<injection-target-name>publisherBean</injection-target-name>
				</injection-target>
			</ejb-local-ref>
			<resource-ref>
				<res-ref-name>EJBContext</res-ref-name>
				<res-type>javax.ejb.EJBContext</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.interceptor.ServiceInterceptor</injection-target-class>
					<injection-target-name>ejbContext</injection-target-name>
				</injection-target>
				<lookup-name>java:comp/EJBContext</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>TransactionSynchronizationRegistry</res-ref-name>
				<res-type>javax.transaction.TransactionSynchronizationRegistry</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.interceptor.ServiceInterceptor</injection-target-class>
					<injection-target-name>registry</injection-target-name>
				</injection-target>
				<lookup-name>java:comp/TransactionSynchronizationRegistry</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>CalypsoDataSource</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.interceptor.ServiceInterceptor</injection-target-class>
					<injection-target-name>dataSource</injection-target-name>
				</injection-target>
				<lookup-name>jdbc/calypso</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>ModuleName</res-ref-name>
				<res-type>java.lang.String</res-type>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.interceptor.ServiceInterceptor</injection-target-class>
					<injection-target-name>moduleName</injection-target-name>
				</injection-target>
				<lookup-name>java:module/ModuleName</lookup-name>
			</resource-ref>
		</interceptor>
		<interceptor>
			<interceptor-class>com.calypso.tk.service.interceptor.ProfilingInterceptor</interceptor-class> 
			<around-invoke>
				<method-name>profile</method-name>
			</around-invoke>
		</interceptor>
		<interceptor>
			<interceptor-class>com.calypso.tk.service.interceptor.LocalInvocationInterceptor</interceptor-class> 
			<around-invoke>
				<method-name>intercept</method-name>
			</around-invoke>
		</interceptor>
		<interceptor>
			<interceptor-class>com.calypso.tk.service.interceptor.CacheServerInterceptor</interceptor-class> 
			<around-invoke>
				<method-name>intercept</method-name>
			</around-invoke>
		</interceptor>
		<interceptor>
			<interceptor-class>com.calypso.tk.service.interceptor.EndSessionInterceptor</interceptor-class>
		</interceptor>
	</interceptors>
	<assembly-descriptor>
		<container-transaction>
			<method>
				<ejb-name>com.calypso.tk.event.publisher.EventPublisherBean</ejb-name>
				<method-name>*</method-name>
			</method>
			<trans-attribute>Never</trans-attribute>
		</container-transaction>
		<container-transaction>
			<method>
				<ejb-name>SeedAllocator</ejb-name>
				<method-name>*</method-name>
			</method>
			<trans-attribute>RequiresNew</trans-attribute>
		</container-transaction>
		<container-transaction>
			<method>
				<ejb-name>com.calypso.tk.service.TransactionWrapper</ejb-name>
				<method-name>*</method-name>
			</method>
			<trans-attribute>RequiresNew</trans-attribute>
		</container-transaction>
		<container-transaction>
			<method>
				<ejb-name>com.calypso.tk.util.cache.DatabaseCacheInvalidationChannel</ejb-name>
				<method-name>*</method-name>
			</method>
			<trans-attribute>Required</trans-attribute>
		</container-transaction>
		<container-transaction>
			<method>
				<ejb-name>com.calypso.tk.cache.CacheUpdateSubscriberBean</ejb-name>
				<method-name>*</method-name>
			</method>
			<trans-attribute>Required</trans-attribute>
		</container-transaction>
		<container-transaction>
			<method>
				<ejb-name>com.calypso.tk.util.cache.ReadOnlyCacheSynchronizationBean</ejb-name>
				<method-name>*</method-name>
			</method>
			<trans-attribute>NotSupported</trans-attribute>
		</container-transaction>
		<interceptor-binding>
                     <ejb-name>com.calypso.tk.util.cache.DatabaseCacheInvalidationChannel</ejb-name>
                     <exclude-default-interceptors>true</exclude-default-interceptors>
        </interceptor-binding>
		<interceptor-binding>
			<ejb-name>*</ejb-name>
			<interceptor-class>com.calypso.tk.service.interceptor.ServiceInterceptor</interceptor-class>
			<interceptor-class>com.calypso.tk.service.interceptor.ProfilingInterceptor</interceptor-class>
		</interceptor-binding>
		<interceptor-binding>
			<ejb-name>com.calypso.tk.service.TransactionWrapper</ejb-name>
			<interceptor-order>
				<interceptor-class>com.calypso.tk.service.interceptor.LocalInvocationInterceptor</interceptor-class>
				<interceptor-class>com.calypso.tk.service.interceptor.ServiceInterceptor</interceptor-class>
				<!-- <interceptor-class>com.calypso.tk.service.interceptor.ProfilingInterceptor</interceptor-class> -->
			</interceptor-order>
		</interceptor-binding>
		<interceptor-binding>
			<ejb-name>com.calypso.tk.service.LocalCacheServer</ejb-name>
			<interceptor-order>
				<interceptor-class>com.calypso.tk.service.interceptor.CacheServerInterceptor</interceptor-class>
				<interceptor-class>com.calypso.tk.service.interceptor.LocalInvocationInterceptor</interceptor-class>
				<interceptor-class>com.calypso.tk.service.interceptor.ServiceInterceptor</interceptor-class>
				<interceptor-class>com.calypso.tk.service.interceptor.ProfilingInterceptor</interceptor-class>
			</interceptor-order>
		</interceptor-binding>
		<interceptor-binding>
			<ejb-name>com.calypso.tk.bo.CacheServer</ejb-name>
			<interceptor-order>
				<interceptor-class>com.calypso.tk.service.interceptor.CacheServerInterceptor</interceptor-class>
				<interceptor-class>com.calypso.tk.service.interceptor.LocalInvocationInterceptor</interceptor-class>
				<interceptor-class>com.calypso.tk.service.interceptor.ServiceInterceptor</interceptor-class>
				<interceptor-class>com.calypso.tk.service.interceptor.ProfilingInterceptor</interceptor-class>
			</interceptor-order>
		</interceptor-binding>
		<interceptor-binding>
			<ejb-name>com.calypso.infra.admin.RemoteUserSession</ejb-name>
			<interceptor-order>
				<interceptor-class>com.calypso.tk.service.interceptor.EndSessionInterceptor</interceptor-class>
				<interceptor-class>com.calypso.tk.service.interceptor.ServiceInterceptor</interceptor-class>
				<interceptor-class>com.calypso.tk.service.interceptor.ProfilingInterceptor</interceptor-class>
			</interceptor-order>
			<method>
				<method-name>endSession</method-name>
				<method-params>
					<method-param>com.calypso.infra.authentication.userdetails.CalypsoUserDetails</method-param>
				</method-params>
			</method>
		</interceptor-binding>
		<interceptor-binding>
			<ejb-name>com.calypso.infra.admin.sql.UserSessionSQL</ejb-name>
			<exclude-default-interceptors>true</exclude-default-interceptors>
		</interceptor-binding>
		<interceptor-binding>
			<ejb-name>com.calypso.tk.event.publisher.EventPublisherBean</ejb-name>
			<exclude-default-interceptors>true</exclude-default-interceptors>
		</interceptor-binding>
		<interceptor-binding>
			<ejb-name>com.calypso.tk.event.publisher.EventPublishingThreadPoolBean</ejb-name>
			<exclude-default-interceptors>true</exclude-default-interceptors>
		</interceptor-binding>
		<interceptor-binding>
			<ejb-name>com.calypso.tk.event.publisher.EventPublishingStatisticsBean</ejb-name>
			<exclude-default-interceptors>true</exclude-default-interceptors>
		</interceptor-binding>
		<interceptor-binding>
			<ejb-name>SeedAllocator</ejb-name>
			<exclude-default-interceptors>true</exclude-default-interceptors>
		</interceptor-binding>
		<interceptor-binding>
			<ejb-name>com.calypso.tk.util.cache.ReadOnlyCacheSynchronizationBean</ejb-name>
			<exclude-default-interceptors>true</exclude-default-interceptors>
		</interceptor-binding>
		<application-exception>
			<exception-class>com.calypso.tk.core.PersistenceException</exception-class>
			<rollback>true</rollback>
		</application-exception>
	</assembly-descriptor>
</ejb-jar>
