<?xml version="1.0" encoding="UTF-8"?>
<ejb-jar version="3.1" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/ejb-jar_3_1.xsd">
	<display-name>Calypso Engines</display-name>

	<enterprise-beans>		
		<session>
			<ejb-name>EnvironmentInitializer</ejb-name>
			<ejb-class>com.calypso.tk.core.EnvironmentInitializer</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<transaction-type>Bean</transaction-type>
			<env-entry>
				<env-entry-name>com.calypso.tk.core.EnvironmentInitializer/applicationName</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>EngineServer</env-entry-value>
				<injection-target>
				    <injection-target-class>com.calypso.tk.core.EnvironmentInitializer</injection-target-class>
				    <injection-target-name>applicationName</injection-target-name>
				</injection-target>
			</env-entry>
			<env-entry>
				<env-entry-name>com.calypso.tk.core.EnvironmentInitializer/instanceName</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>${calypso.engine.manager.config:}</env-entry-value>
				<injection-target>
				    <injection-target-class>com.calypso.tk.core.EnvironmentInitializer</injection-target-class>
				    <injection-target-name>instanceName</injection-target-name>
				</injection-target>
			</env-entry>
			<resource-ref>
				<res-ref-name>ModuleName</res-ref-name>
				<res-type>java.lang.String</res-type>
				<injection-target>
					<injection-target-class>com.calypso.tk.core.EnvironmentInitializer</injection-target-class>
					<injection-target-name>moduleName</injection-target-name>
				</injection-target>
				<lookup-name>java:module/ModuleName</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-class>com.calypso.tk.core.EnvironmentInitializer</lifecycle-callback-class>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		<session>
			<ejb-name>MessagingInitializer</ejb-name>
			<ejb-class>com.calypso.tk.event.MessagingInitializer</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<depends-on><ejb-name>EnvironmentInitializer</ejb-name></depends-on>
			<transaction-type>Bean</transaction-type>
			<resource-ref>
				<res-ref-name>jmsConnectionFactory</res-ref-name>
				<res-type>javax.jms.ConnectionFactory</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.event.MessagingInitializer</injection-target-class>
					<injection-target-name>connectionFactory</injection-target-name>
				</injection-target>
				<lookup-name>jms/connectionFactory</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-class>com.calypso.tk.event.MessagingInitializer</lifecycle-callback-class>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		<session>
			<ejb-name>ElasticsearchMessagingServerInitializer</ejb-name>
			<ejb-class>com.calypso.elasticsearch.monitoring.ElasticsearchMessagingServerInitializer</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<depends-on><ejb-name>MessagingInitializer</ejb-name></depends-on>
			<resource-ref>
				<res-ref-name>todPooledConnectionFactory</res-ref-name>
				<res-type>javax.jms.ConnectionFactory</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.elasticsearch.monitoring.ElasticsearchMessagingServerInitializer</injection-target-class>
					<injection-target-name>connectionFactory</injection-target-name>
				</injection-target>
				<lookup-name>jms/todPooledConnectionFactory</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>jmsQueue</res-ref-name>
				<res-type>javax.jms.Queue</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.elasticsearch.monitoring.ElasticsearchMessagingServerInitializer</injection-target-class>
					<injection-target-name>queue</injection-target-name>
				</injection-target>
				<lookup-name>queue/calypsoMonitoring</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-class>com.calypso.elasticsearch.monitoring.ElasticsearchMessagingServerInitializer</lifecycle-callback-class>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
			<pre-destroy>
				<lifecycle-callback-class>com.calypso.elasticsearch.monitoring.ElasticsearchMessagingServerInitializer</lifecycle-callback-class>
				<lifecycle-callback-method>destroy</lifecycle-callback-method>
			</pre-destroy>
		</session>
		<session>
			<ejb-name>DSConnectionInitializer</ejb-name>
			<ejb-class>com.calypso.tk.service.DSConnectionInitializer</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<depends-on><ejb-name>MessagingInitializer</ejb-name></depends-on>
			<transaction-type>Bean</transaction-type>
			<env-entry>
				<env-entry-name>com.calypso.tk.service.DSConnectionInitializer/ejbNamingUrlPrefixPkgs</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>org.jboss.ejb.client.naming</env-entry-value>
				<injection-target>
				    <injection-target-class>com.calypso.tk.service.DSConnectionInitializer</injection-target-class>
				    <injection-target-name>ejbNamingUrlPrefixPkgs</injection-target-name>
				</injection-target>
			</env-entry>
			<resource-ref>
				<res-ref-name>CalypsoDataSource</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.DSConnectionInitializer</injection-target-class>
					<injection-target-name>dataSource</injection-target-name>
				</injection-target>
				<lookup-name>jdbc/calypso</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>EngineserverModuleName</res-ref-name>
				<res-type>java.lang.String</res-type>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.DSConnectionInitializer</injection-target-class>
					<injection-target-name>moduleName</injection-target-name>
				</injection-target>
				<lookup-name>java:module/ModuleName</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-class>com.calypso.tk.service.DSConnectionInitializer</lifecycle-callback-class>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		<session>
			<ejb-name>com.calypso.engine.EngineManager</ejb-name>
			<ejb-class>com.calypso.engine.EngineManagerImpl</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<transaction-type>Bean</transaction-type>
			<env-entry>
				<env-entry-name>com.calypso.engine.EngineManagerImpl/cleanEngineSessionOnStartup</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>${cleanEngineSessionOnStartup:false}</env-entry-value>
				<injection-target>
				    <injection-target-class>com.calypso.engine.EngineManagerImpl</injection-target-class>
				    <injection-target-name>cleanEngineSessionOnStartup</injection-target-name>
				</injection-target>
			</env-entry>
		</session>
		<session>
			<ejb-name>SessionPersistor</ejb-name>
			<ejb-class>com.calypso.infra.admin.sql.UserSessionSQL</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<concurrency-management-type>Bean</concurrency-management-type>
			<depends-on>
				<ejb-name>DSConnectionInitializer</ejb-name>
			</depends-on>
			<resource-ref>
				<res-ref-name>CalypsoManagedDataSource</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.infra.admin.sql.UserSessionSQL</injection-target-class>
					<injection-target-name>dataSource</injection-target-name>
				</injection-target>
				<lookup-name>jdbc/calypso</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>moduleName</res-ref-name>
				<res-type>java.lang.String</res-type>
				<injection-target>
					<injection-target-class>com.calypso.infra.admin.sql.UserSessionSQL</injection-target-class>
					<injection-target-name>moduleName</injection-target-name>
				</injection-target>
				<lookup-name>java:module/ModuleName</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>TransactionSynchronizationRegistry</res-ref-name>
				<res-type>javax.transaction.TransactionSynchronizationRegistry</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.infra.admin.sql.UserSessionSQL</injection-target-class>
					<injection-target-name>transactionSynchronizationRegistry</injection-target-name>
				</injection-target>
				<lookup-name>java:comp/TransactionSynchronizationRegistry</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>		
		<session>
			<ejb-name>com.calypso.tk.event.sql.EventLoader</ejb-name>
			<ejb-class>com.calypso.tk.event.sql.EventLoader</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<concurrency-management-type>Bean</concurrency-management-type>
			<depends-on>
			<ejb-name>DSConnectionInitializer</ejb-name>
			</depends-on>
			<resource-ref>
				<res-ref-name>CalypsoDataSource</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.event.sql.EventLoader</injection-target-class>
					<injection-target-name>dataSource</injection-target-name>
				</injection-target>
				<lookup-name>jdbc/calypso</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>moduleName</res-ref-name>
				<res-type>java.lang.String</res-type>
				<injection-target>
					<injection-target-class>com.calypso.tk.event.sql.EventLoader</injection-target-class>
					<injection-target-name>moduleName</injection-target-name>
				</injection-target>
				<lookup-name>java:module/ModuleName</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>TransactionSynchronizationRegistry</res-ref-name>
				<res-type>javax.transaction.TransactionSynchronizationRegistry</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.event.sql.EventLoader</injection-target-class>
					<injection-target-name>transactionSynchronizationRegistry</injection-target-name>
				</injection-target>
				<lookup-name>java:comp/TransactionSynchronizationRegistry</lookup-name>
			</resource-ref>
			<post-construct>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		<session>
			<ejb-name>EngineStartupUtil</ejb-name>
			<ejb-class>com.calypso.engine.util.EngineStartupUtil</ejb-class>
			<env-entry>
				<env-entry-name>EngineStartupUtil/instanceName</env-entry-name>
				<env-entry-type>java.lang.String</env-entry-type>
				<env-entry-value>${calypso.engine.manager.config:}</env-entry-value>
				<injection-target>
				    <injection-target-class>com.calypso.engine.util.EngineStartupUtil</injection-target-class>
				    <injection-target-name>instanceName</injection-target-name>
				</injection-target>
			</env-entry>
		</session>
		<session>
			<ejb-name>EngineMetricsPerister</ejb-name>
			<ejb-class>com.calypso.engine.metrics.sql.EngineMetricsPersister</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<concurrency-management-type>Bean</concurrency-management-type>
			<depends-on>
				<ejb-name>DSConnectionInitializer</ejb-name>
			</depends-on>
			<resource-ref>
				<res-ref-name>CalypsoDataSource</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.engine.metrics.sql.EngineMetricsPersister</injection-target-class>
					<injection-target-name>dataSource</injection-target-name>
				</injection-target>
				<lookup-name>jdbc/calypso</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>TransactionSynchronizationRegistry</res-ref-name>
				<res-type>javax.transaction.TransactionSynchronizationRegistry</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.engine.metrics.sql.EngineMetricsPersister</injection-target-class>
					<injection-target-name>transactionSynchronizationRegistry</injection-target-name>
				</injection-target>
				<lookup-name>java:comp/TransactionSynchronizationRegistry</lookup-name>
			</resource-ref>
			<env-entry>
				<env-entry-name>EngineMetricsPerister/rawCommitEnabled</env-entry-name>
				<env-entry-type>java.lang.Boolean</env-entry-type>
				<env-entry-value>false</env-entry-value>
				<injection-target>
				    <injection-target-class>com.calypso.engine.metrics.sql.EngineMetricsPersister</injection-target-class>
				    <injection-target-name>rawCommitEnabled</injection-target-name>
				</injection-target>
			</env-entry>
			<post-construct>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		
		<!-- Memory timer -->
		<session>
			<ejb-name>CalypsoMemoryAlertTimer</ejb-name>
			<ejb-class>com.calypso.infra.monitoring.CalypsoMemoryAlertTimer</ejb-class>
			<session-type>Singleton</session-type>
			<init-on-startup>true</init-on-startup>
			<concurrency-management-type>Bean</concurrency-management-type>
			<depends-on>
				<ejb-name>EnvironmentInitializer</ejb-name>
			</depends-on>
			<transaction-type>Container</transaction-type>
			<post-construct>
				<lifecycle-callback-class>com.calypso.infra.monitoring.CalypsoMemoryAlertTimer</lifecycle-callback-class>
				<lifecycle-callback-method>init</lifecycle-callback-method>
			</post-construct>
		</session>
		
	</enterprise-beans>
	<interceptors>
		<interceptor>
			<interceptor-class>com.calypso.tk.service.interceptor.ServiceInterceptor</interceptor-class> 
			<around-invoke>
				<method-name>intercept</method-name>
			</around-invoke>
			<resource-ref>
				<res-ref-name>EJBContext</res-ref-name>
				<res-type>javax.ejb.EJBContext</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.interceptor.ServiceInterceptor</injection-target-class>
					<injection-target-name>ejbContext</injection-target-name>
				</injection-target>
				<lookup-name>java:comp/EJBContext</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>TransactionSynchronizationRegistry</res-ref-name>
				<res-type>javax.transaction.TransactionSynchronizationRegistry</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.interceptor.ServiceInterceptor</injection-target-class>
					<injection-target-name>registry</injection-target-name>
				</injection-target>
				<lookup-name>java:comp/TransactionSynchronizationRegistry</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>CalypsoDataSource</res-ref-name>
				<res-type>javax.sql.DataSource</res-type>
				<res-auth>Container</res-auth>
				<res-sharing-scope>Shareable</res-sharing-scope>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.interceptor.ServiceInterceptor</injection-target-class>
					<injection-target-name>dataSource</injection-target-name>
				</injection-target>
				<lookup-name>jdbc/calypso</lookup-name>
			</resource-ref>
			<resource-ref>
				<res-ref-name>ModuleName</res-ref-name>
				<res-type>java.lang.String</res-type>
				<injection-target>
					<injection-target-class>com.calypso.tk.service.interceptor.ServiceInterceptor</injection-target-class>
					<injection-target-name>moduleName</injection-target-name>
				</injection-target>
				<lookup-name>java:module/ModuleName</lookup-name>
			</resource-ref>
		</interceptor>
		<interceptor>
			<interceptor-class>com.calypso.tk.service.interceptor.ProfilingInterceptor</interceptor-class> 
			<around-invoke>
				<method-name>profile</method-name>
			</around-invoke>
		</interceptor>
	</interceptors>
	<assembly-descriptor>
		<container-transaction>
			<method>
				<ejb-name>com.calypso.tk.event.sql.EventLoader</ejb-name>
				<method-name>*</method-name>
			</method>
			<trans-attribute>RequiresNew</trans-attribute>
		</container-transaction>
		<interceptor-binding>
			<ejb-name>*</ejb-name>
			<interceptor-class>com.calypso.tk.service.interceptor.ServiceInterceptor</interceptor-class>
			<interceptor-class>com.calypso.tk.service.interceptor.ProfilingInterceptor</interceptor-class>
		</interceptor-binding>
		<interceptor-binding>
			<ejb-name>com.calypso.tk.event.publisher.EventPublishingThreadPoolBean</ejb-name>
			<exclude-default-interceptors>true</exclude-default-interceptors>
		</interceptor-binding>
		<interceptor-binding>
			<ejb-name>com.calypso.tk.event.publisher.EventPublishingStatisticsBean</ejb-name>
			<exclude-default-interceptors>true</exclude-default-interceptors>
		</interceptor-binding>
		<interceptor-binding>
			<ejb-name>com.calypso.tk.service.AnalysisManager</ejb-name>
			<exclude-default-interceptors>true</exclude-default-interceptors>
		</interceptor-binding>
		<interceptor-binding>
			<ejb-name>ModuleDeploymentPersister</ejb-name>
			<exclude-default-interceptors>true</exclude-default-interceptors>
		</interceptor-binding>
	</assembly-descriptor>
</ejb-jar>
